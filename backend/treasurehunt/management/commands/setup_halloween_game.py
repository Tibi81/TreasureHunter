from django.core.management.base import BaseCommand
from treasurehunt.models import Station, Challenge

class Command(BaseCommand):
    help = 'Halloween j√°t√©k alapadatok felt√∂lt√©se'

    def handle(self, *args, **options):
        # √Ållom√°sok l√©trehoz√°sa
        stations_data = [
            (1, 'Konyha', 'üéÉ', 'separate'),
            (2, 'Nappali', 'üëª', 'separate'),
            (3, 'F√ºrd≈ëszoba', 'üï∑Ô∏è', 'separate'),
            (4, 'H√°l√≥szoba', 'ü¶á', 'separate'),
            (5, 'Tal√°lkoz√°si Pont', 'üíÄ', 'together'),
            (6, 'Titkos Kamra', 'üßô‚Äç‚ôÄÔ∏è', 'together'),
        ]
        
        for number, name, icon, phase in stations_data:
            station, created = Station.objects.get_or_create(
                number=number,
                defaults={'name': name, 'icon': icon, 'phase': phase}
            )
            if created:
                self.stdout.write(f'√Ållom√°s l√©trehozva: {station}')
        
        # P√©lda kih√≠v√°sok
        challenges_data = [
            # Konyha - K√ºl√∂n feladatok
            (1, 'pumpkin', 'T√∂k T√°rgy Keres√©s', 'Keress egy narancss√°rga t√°rgyat a konyh√°ban!', 'KITCHEN_PUMPKIN_001', 'N√©zz a fels≈ë szekr√©nyekben!'),
            (1, 'ghost', 'Szellem S√ºti', 'Tal√°lj meg egy feh√©r t√°rgyat a konyh√°ban!', 'KITCHEN_GHOST_001', 'A h≈±t≈ëben vagy a mosogat√≥n√°l n√©zz!'),
            
            # Nappali - K√ºl√∂n feladatok
            (2, 'pumpkin', 'TV Rejtv√©ny', 'Keress egy t√∂k√∂s matric√°t a nappali valahol!', 'LIVING_PUMPKIN_002', 'A kanap√© k√∂r√ºl vagy a TV-n√©l!'),
            (2, 'ghost', 'K√∂nyv Miszt√©rium', 'Tal√°lj egy feh√©r k√∂nyvjelz≈ët!', 'LIVING_GHOST_002', 'A k√∂nyvespolcon n√©zz!'),
            
            # K√∂z√∂s feladatok
            (5, None, 'Tal√°lkoz√°s', 'V√°rjatok egym√°sra! Egy√ºtt tov√°bb!', 'MEETING_POINT_005', 'Itt v√°rjatok a m√°sik csapatra!'),
            (6, None, 'V√©gs≈ë Kincs', 'Keress√©tek meg a Halloween kincsesl√°d√°t!', 'FINAL_TREASURE_006', 'A legs√∂t√©tebb sarokban van elrejtve!'),
        ]
        
        for station_num, team_type, title, desc, qr, help_text in challenges_data:
            station = Station.objects.get(number=station_num)
            challenge, created = Challenge.objects.get_or_create(
                station=station,
                team_type=team_type,
                defaults={
                    'title': title,
                    'description': desc,
                    'qr_code': qr,
                    'help_text': help_text
                }
            )
            if created:
                self.stdout.write(f'Feladat l√©trehozva: {challenge}')
        
        self.stdout.write(self.style.SUCCESS('Halloween j√°t√©k adatok sikeresen felt√∂ltve!'))