#!/usr/bin/env python3
"""
Halloween Kincskeres≈ë J√°t√©k - Automatikus telep√≠t≈ë script
"""

import os
import sys
import subprocess
import platform

def run_command(command, cwd=None):
    """Futtat egy parancsot √©s visszaadja az eredm√©nyt"""
    try:
        result = subprocess.run(command, shell=True, cwd=cwd, check=True, capture_output=True, text=True)
        return True, result.stdout
    except subprocess.CalledProcessError as e:
        return False, e.stderr

def main():
    print("üéÉ Halloween Kincskeres≈ë J√°t√©k - Telep√≠t≈ë üëª")
    print("=" * 50)
    
    # Python ellen≈ërz√©se
    if sys.version_info < (3, 8):
        print("‚ùå Python 3.8+ sz√ºks√©ges!")
        sys.exit(1)
    
    print(f"‚úÖ Python {sys.version.split()[0]} √©szlelve")
    
    # Backend telep√≠t√©se
    print("\nüîß Backend telep√≠t√©se...")
    
    # Virtu√°lis k√∂rnyezet l√©trehoz√°sa
    venv_name = "myvenv"
    if not os.path.exists(venv_name):
        success, output = run_command(f"python -m venv {venv_name}")
        if not success:
            print(f"‚ùå Virtu√°lis k√∂rnyezet l√©trehoz√°sa sikertelen: {output}")
            sys.exit(1)
        print("‚úÖ Virtu√°lis k√∂rnyezet l√©trehozva")
    
    # Aktiv√°l√°si parancs meghat√°roz√°sa
    if platform.system() == "Windows":
        activate_cmd = f"{venv_name}\\Scripts\\activate"
        pip_cmd = f"{venv_name}\\Scripts\\pip"
        python_cmd = f"{venv_name}\\Scripts\\python"
    else:
        activate_cmd = f"source {venv_name}/bin/activate"
        pip_cmd = f"{venv_name}/bin/pip"
        python_cmd = f"{venv_name}/bin/python"
    
    # F√ºgg≈ës√©gek telep√≠t√©se
    success, output = run_command(f"{pip_cmd} install -r backend/requirements.txt")
    if not success:
        print(f"‚ùå F√ºgg≈ës√©gek telep√≠t√©se sikertelen: {output}")
        sys.exit(1)
    print("‚úÖ Backend f√ºgg≈ës√©gek telep√≠tve")
    
    # Adatb√°zis migr√°l√°sa
    success, output = run_command(f"{python_cmd} manage.py migrate", cwd="backend")
    if not success:
        print(f"‚ùå Adatb√°zis migr√°l√°sa sikertelen: {output}")
        sys.exit(1)
    print("‚úÖ Adatb√°zis migr√°lva")
    
    # Frontend telep√≠t√©se
    print("\nüé® Frontend telep√≠t√©se...")
    
    # Node.js ellen≈ërz√©se
    success, output = run_command("node --version")
    if not success:
        print("‚ùå Node.js nincs telep√≠tve! K√©rlek telep√≠tsd a https://nodejs.org/ oldalr√≥l")
        sys.exit(1)
    
    print(f"‚úÖ Node.js {output.strip()} √©szlelve")
    
    # npm f√ºgg≈ës√©gek telep√≠t√©se
    success, output = run_command("npm install", cwd="frontend")
    if not success:
        print(f"‚ùå Frontend f√ºgg≈ës√©gek telep√≠t√©se sikertelen: {output}")
        sys.exit(1)
    print("‚úÖ Frontend f√ºgg≈ës√©gek telep√≠tve")
    
    print("\nüéâ Telep√≠t√©s befejezve!")
    print("\nüìã K√∂vetkez≈ë l√©p√©sek:")
    print("1. Admin felhaszn√°l√≥ l√©trehoz√°sa:")
    print(f"   {python_cmd} manage.py createsuperuser")
    print("2. Backend szerver ind√≠t√°sa:")
    print(f"   {python_cmd} manage.py runserver")
    print("3. Frontend szerver ind√≠t√°sa (√∫j termin√°lban):")
    print("   cd frontend && npm run dev")
    print("4. Admin fel√ºlet: http://localhost:8000/admin/")
    print("5. J√°t√©k: http://localhost:5173/")
    
    print("\nüìñ R√©szletes √∫tmutat√≥: README.md")

if __name__ == "__main__":
    main()
