// components/ProgressDisplay.jsx
import React from 'react';

const ProgressDisplay = ({ currentPlayer, teams, gameStatus, gameInfo, gameName, showAllTeams = false }) => {
  // Jelenlegi csapat √°llapot√°nak lek√©rdez√©se
  const getCurrentTeamStatus = () => {
    if (!currentPlayer) return null;
    const team = teams.find(t => t.name === (currentPlayer.team_name || currentPlayer.team));
    if (!team) return null;
    
    return {
      currentStation: team.current_station,
      completed: team.completed_at !== null,
      attempts: team.attempts,
      helpUsed: team.help_used,
      separatePhaseSaveUsed: team.separate_phase_save_used,
      togetherPhaseSaveUsed: team.together_phase_save_used
    };
  };

  // √ñsszes csapat √°llapot√°nak lek√©rdez√©se
  const getAllTeamsStatus = () => {
    if (!teams || teams.length === 0) return [];
    
    return teams.map(team => ({
      name: team.name,
      displayName: team.display_name,
      currentStation: team.current_station,
      completed: team.completed_at !== null,
      attempts: team.attempts,
      helpUsed: team.help_used,
      separatePhaseSaveUsed: team.separate_phase_save_used,
      togetherPhaseSaveUsed: team.together_phase_save_used,
      players: team.players || []
    }));
  };

  // √ñsszes √°llom√°s sz√°ma (fix √©rt√©k)
  const totalStations = 6;
  
  // A backend m√°r kisz√°m√≠tja ezeket, csak haszn√°ljuk a gameInfo adatokat
  const getCompletedStations = () => {
    if (showAllTeams) {
      // Ha mindk√©t csapatot mutatjuk, akkor az √°tlagos halad√°st sz√°m√≠tjuk
      if (!allTeamsStatus || allTeamsStatus.length === 0) return 0;
      
      // Ha a j√°t√©k befejez≈ëd√∂tt, minden √°llom√°s k√©sz
      if (gameStatus === 'finished') return totalStations;
      
      // √Åtlagos halad√°s sz√°m√≠t√°sa
      let totalProgress = 0;
      allTeamsStatus.forEach(team => {
        if (gameStatus === 'separate') {
          totalProgress += Math.max(0, team.currentStation - 1);
        } else if (gameStatus === 'together') {
          totalProgress += 4 + (team.currentStation - 5);
        }
      });
      
      return Math.round(totalProgress / allTeamsStatus.length);
    } else {
      // Egyedi csapat halad√°sa
      const teamStatus = getCurrentTeamStatus();
      if (!teamStatus) return 0;
      
      // Ha a j√°t√©k befejez≈ëd√∂tt, minden √°llom√°s k√©sz
      if (gameStatus === 'finished') return totalStations;
      
      // K√ºl√∂n f√°zisban: a jelenlegi √°llom√°s - 1 (mert m√©g nem fejezt√©k be)
      if (gameStatus === 'separate') {
        return Math.max(0, teamStatus.currentStation - 1);
      }
      
      // K√∂z√∂s f√°zisban: 4 √°llom√°s + k√∂z√∂s √°llom√°sok
      if (gameStatus === 'together') {
        return 4 + (teamStatus.currentStation - 5); // 5. √°llom√°s = 4 + 1, 6. √°llom√°s = 4 + 2
      }
      
      return 0;
    }
  };

  // H√°tral√©v≈ë √°llom√°sok sz√°ma
  const getRemainingStations = () => {
    return totalStations - getCompletedStations();
  };

  // Halad√°s sz√°zal√©ka
  const getProgressPercentage = () => {
    return Math.round((getCompletedStations() / totalStations) * 100);
  };

  const teamStatus = getCurrentTeamStatus();
  const allTeamsStatus = getAllTeamsStatus();
  
  // Ha showAllTeams true, akkor minden csapatot mutatunk, k√ºl√∂nben csak a jelenlegi j√°t√©kos csapat√°t
  if (showAllTeams) {
    if (!allTeamsStatus || allTeamsStatus.length === 0) return null;
  } else {
    if (!teamStatus) return null;
  }

  const completed = getCompletedStations();
  const remaining = getRemainingStations();
  const percentage = getProgressPercentage();

  return (
    <div className="bg-black bg-opacity-60 rounded-lg p-4 mb-6">
      <div className="text-center">
        {/* J√°t√©k n√©v */}
        {gameName && (
          <div className="mb-4">
            <h1 className="text-xl sm:text-2xl font-bold text-orange-400 mb-2">
              {gameName}
            </h1>
            {gameInfo && (
              <div className="text-sm text-gray-300">
                J√°t√©kosok: {gameInfo.total_players}/{gameInfo.max_players} 
                {gameInfo.available_slots > 0 && (
                  <span className="text-green-400 ml-2">
                    ({gameInfo.available_slots} szabad hely)
                  </span>
                )}
                {gameStatus === 'waiting' && gameInfo.total_players < 1 && (
                  <div className="text-xs text-blue-300 mt-1">
                    V√°rjuk az els≈ë j√°t√©kos csatlakoz√°s√°t...
                  </div>
                )}
                {gameStatus === 'setup' && (
                  <div className="text-xs text-orange-300 mt-1">
                    K√©szen √°ll az ind√≠t√°sra! Admin ind√≠tja el a j√°t√©kot.
                  </div>
                )}
              </div>
            )}
          </div>
        )}

        <h2 className="text-lg sm:text-xl font-bold text-orange-400 mb-4">
          Halad√°s
        </h2>
        
        {/* Halad√°s s√°v */}
        <div className="mb-4">
          <div className="flex justify-between text-sm text-gray-300 mb-2">
            <span>Befejezve: {completed}/{totalStations}</span>
            <span>H√°tra: {remaining}</span>
          </div>
          
          {/* Csapat log√≥k a s√°v felett √©s alatt */}
          {showAllTeams && allTeamsStatus && allTeamsStatus.length >= 2 && (
            <div className="flex justify-between items-center mb-2">
              <div className="flex items-center gap-2">
                <span className="text-2xl">üéÉ</span>
                <span className="text-xs text-orange-300">
                  {allTeamsStatus.find(t => t.name === 'pumpkin')?.currentStation || 1}. √°llom√°s
                </span>
              </div>
              <div className="flex items-center gap-2">
                <span className="text-2xl">üëª</span>
                <span className="text-xs text-purple-300">
                  {allTeamsStatus.find(t => t.name === 'ghost')?.currentStation || 1}. √°llom√°s
                </span>
              </div>
            </div>
          )}
          
          <div className="w-full bg-gray-700 rounded-full h-3 relative">
            <div 
              className="bg-gradient-to-r from-orange-500 to-purple-500 h-3 rounded-full transition-all duration-500"
              style={{ width: `${percentage}%` }}
            ></div>
            
            {/* Csapat poz√≠ci√≥k jel√∂l√©se a s√°von */}
            {showAllTeams && allTeamsStatus && allTeamsStatus.length >= 2 && (
              <>
                {/* T√∂k csapat poz√≠ci√≥ja */}
                <div 
                  className="absolute -top-1 w-3 h-5 bg-orange-300 rounded-full flex items-center justify-center text-xs font-bold"
                  style={{ 
                    left: `${Math.min(100, Math.max(0, ((allTeamsStatus.find(t => t.name === 'pumpkin')?.currentStation || 1) - 1) / totalStations * 100))}%`,
                    transform: 'translateX(-50%)'
                  }}
                  title="üéÉ T√∂k Csapat"
                >
                  üéÉ
                </div>
                {/* Szellem csapat poz√≠ci√≥ja */}
                <div 
                  className="absolute -top-1 w-3 h-5 bg-purple-300 rounded-full flex items-center justify-center text-xs font-bold"
                  style={{ 
                    left: `${Math.min(100, Math.max(0, ((allTeamsStatus.find(t => t.name === 'ghost')?.currentStation || 1) - 1) / totalStations * 100))}%`,
                    transform: 'translateX(-50%)'
                  }}
                  title="üëª Szellem Csapat"
                >
                  üëª
                </div>
              </>
            )}
          </div>
          
          <div className="text-sm text-gray-300 mt-1">
            {percentage}% k√©sz
          </div>
        </div>

        {/* Csapatok √°llapota */}
        {showAllTeams ? (
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 mb-4">
            {allTeamsStatus.map((team) => (
              <div key={team.name} className="bg-gray-900 bg-opacity-50 rounded-lg p-4">
                <div className="text-center mb-3">
                  <div className="text-2xl mb-2">
                    {team.name === 'pumpkin' ? 'üéÉ' : 'üëª'}
                  </div>
                  <div className="font-semibold text-orange-300 text-lg">
                    {team.displayName}
                  </div>
                </div>
                
                <div className="space-y-2">
                  <div className="text-center">
                    <div className="text-sm text-gray-400">Jelenlegi √°llom√°s</div>
                    <div className="text-xl font-bold text-purple-300">
                      {team.currentStation}. √°llom√°s
                    </div>
                  </div>
                  
                  <div className="grid grid-cols-3 gap-2 text-xs">
                    <div className="bg-orange-900 bg-opacity-30 rounded p-2 text-center">
                      <div className="text-orange-300 font-semibold">Pr√≥b√°lkoz√°sok</div>
                      <div className="text-sm">
                        {team.attempts}/3
                        {team.attempts >= 2 && <span className="text-red-400 ml-1">‚ö†Ô∏è</span>}
                      </div>
                    </div>
                    <div className="bg-purple-900 bg-opacity-30 rounded p-2 text-center">
                      <div className="text-purple-300 font-semibold">Seg√≠ts√©g</div>
                      <div className="text-sm">
                        {team.helpUsed ? 'Haszn√°lva' : 'El√©rhet≈ë'}
                      </div>
                    </div>
                    <div className="bg-green-900 bg-opacity-30 rounded p-2 text-center">
                      <div className="text-green-300 font-semibold">Mentes√≠t≈ë</div>
                      <div className="text-sm">
                        {gameStatus === 'separate' ? 
                          (team.separatePhaseSaveUsed ? 'Haszn√°lva' : 'El√©rhet≈ë') :
                          (team.togetherPhaseSaveUsed ? 'Haszn√°lva' : 'El√©rhet≈ë')
                        }
                      </div>
                    </div>
                  </div>
                  
                  <div className="text-xs text-gray-400 text-center">
                    {gameStatus === 'separate' ? 'K√ºl√∂n f√°zis' : 'K√∂z√∂s f√°zis'}
                  </div>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <div className="bg-gray-900 bg-opacity-50 rounded-lg p-3">
            <div className="text-base sm:text-lg font-semibold text-purple-300 mb-1">
              Jelenlegi √°llom√°s: {teamStatus.currentStation}. 
            </div>
            <div className="text-xs sm:text-sm text-gray-300">
              {gameStatus === 'separate' ? 'K√ºl√∂n f√°zis' : 'K√∂z√∂s f√°zis'}
            </div>
          </div>
        )}

        {/* J√°t√©kosok list√°ja - csak ha nem showAllTeams m√≥dban vagyunk */}
        {!showAllTeams && teams && teams.length > 0 && (
          <div className="mb-4">
            <h3 className="text-base sm:text-lg font-semibold text-purple-300 mb-3">
              J√°t√©kosok
            </h3>
            <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
              {teams.map((team) => (
                <div key={team.name} className="bg-gray-900 bg-opacity-50 rounded-lg p-3 sm:p-4">
                  <div className="text-center mb-2">
                    <div className="text-2xl mb-1">
                      {team.name === 'pumpkin' ? 'üéÉ' : 'üëª'}
                    </div>
                    <div className="font-semibold text-orange-300">
                      {team.display_name}
                    </div>
                    <div className="text-sm text-gray-400">
                      {team.player_count}/{team.max_players} j√°t√©kos
                    </div>
                  </div>
                  
                  <div className="space-y-1">
                    {team.players.map((player, index) => (
                      <div key={index} className="text-xs sm:text-sm text-gray-300 flex items-center justify-between">
                        <span className="truncate">{player.name}</span>
                        {player.name === currentPlayer?.name && (
                          <span className="text-orange-400 text-xs ml-1">(Te)</span>
                        )}
                      </div>
                    ))}
                    
                    {team.available_slots > 0 && (
                      <div className="text-xs text-gray-500 text-center mt-2">
                        {team.available_slots} szabad hely
                      </div>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* Pr√≥b√°lkoz√°sok, seg√≠ts√©g √©s mentes√≠t≈ë feladat - csak ha nem showAllTeams m√≥dban vagyunk */}
        {!showAllTeams && (
          <div className="grid grid-cols-1 sm:grid-cols-3 gap-3 mt-4">
            <div className="bg-orange-900 bg-opacity-30 rounded-lg p-3 text-center">
              <div className="text-xs sm:text-sm text-orange-300 font-semibold mb-1">Pr√≥b√°lkoz√°sok</div>
              <div className="text-base sm:text-lg">
                {teamStatus.attempts}/3
                {teamStatus.attempts >= 2 && (
                  <span className="text-red-400 ml-1">‚ö†Ô∏è</span>
                )}
              </div>
            </div>
            <div className="bg-purple-900 bg-opacity-30 rounded-lg p-3 text-center">
              <div className="text-xs sm:text-sm text-purple-300 font-semibold mb-1">Seg√≠ts√©g</div>
              <div className="text-base sm:text-lg">
                {teamStatus.helpUsed ? 'Haszn√°lva' : 'El√©rhet≈ë'}
              </div>
            </div>
            <div className="bg-green-900 bg-opacity-30 rounded-lg p-3 text-center">
              <div className="text-xs sm:text-sm text-green-300 font-semibold mb-1">Mentes√≠t≈ë</div>
              <div className="text-base sm:text-lg">
                {gameStatus === 'separate' ? 
                  (teamStatus.separatePhaseSaveUsed ? 'Haszn√°lva' : 'El√©rhet≈ë') :
                  (teamStatus.togetherPhaseSaveUsed ? 'Haszn√°lva' : 'El√©rhet≈ë')
                }
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default ProgressDisplay;